/**
 * 
 */
package com.karvy.handloom.signup.dao.impl;

import java.math.BigInteger;

import org.hibernate.criterion.Restrictions;
import org.slf4j.Logger;
import org.slf4j.LoggerFactory;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Repository;

import com.karvy.handloom.admin.bean.UserBean;
import com.karvy.handloom.common.util.HibernateUtil;
import com.karvy.handloom.entity.Employee;
import com.karvy.handloom.entity.OTPDetails;
import com.karvy.handloom.entity.SignUp;
import com.karvy.handloom.signup.dao.SignUPDAO;

/**
 * @author sateesh.jangam
 *
 */
@Repository
public class SignUPDAOImpl implements SignUPDAO {

	private static final Logger logger = LoggerFactory.getLogger(SignUPDAOImpl.class);

	
	@Autowired
	HibernateUtil hibernateUtil;
	
	@Override
	public Integer saveRegistrationForm(SignUp signUp) {
			return (Integer) hibernateUtil.create(signUp);
	}
	
	@Override
	public Object geExistingtOTP(BigInteger generatedOTP) {
			Object uniqueResult = hibernateUtil.createEntityCriteria(OTPDetails.class).add(Restrictions.eq("otpCode", generatedOTP)).uniqueResult();
			return uniqueResult;
		
	}

	@Override
	public UserBean getUserDetails(String uname,String role) {
		UserBean userBean=null;
		if(role.equals("Stakeholder")){
			userBean=new UserBean();
			SignUp signUp=(SignUp)hibernateUtil.createEntityCriteria(SignUp.class).add(Restrictions.eq("signUpEmail", uname)).uniqueResult();
			userBean.setAadharNo(String.valueOf(signUp.getSignUpAadhar()));
			userBean.setEmail(signUp.getSignUpEmail());
			userBean.setId(String.valueOf(signUp.getSignUpId()));
			userBean.setMobileNo(String.valueOf(signUp.getSignUpMobile()));
			userBean.setName(signUp.getSignUpName());
							
		}else{
			userBean=new UserBean();
			Employee employee=(Employee)hibernateUtil.createEntityCriteria(Employee.class).add(Restrictions.eq("emailId", uname)).uniqueResult();
			userBean.setEmail(employee.getEmailId());
			userBean.setName(employee.getEmpName());
			userBean.setEmpCode(employee.getEmpCode());
			userBean.setAadharNo(String.valueOf(employee.getAadharNo()));
			userBean.setMobileNo(String.valueOf(employee.getMobileNo()));
			userBean.setId(String.valueOf(employee.getEmpId()));
			}
		
		return userBean;
	}

}
