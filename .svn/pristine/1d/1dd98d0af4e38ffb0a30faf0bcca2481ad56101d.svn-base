/**
 * 
 */
package com.karvy.handloom.signup.dao.impl;

import java.math.BigInteger;

import org.hibernate.criterion.Restrictions;
import org.slf4j.Logger;
import org.slf4j.LoggerFactory;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Repository;

import com.karvy.handloom.common.util.HibernateUtil;
import com.karvy.handloom.common.util.MailAndMessangeSendingUtil;
import com.karvy.handloom.entity.OTPDetails;
import com.karvy.handloom.entity.SignUp;
import com.karvy.handloom.signup.dao.SignUPDAO;

/**
 * @author sateesh.jangam
 *
 */
@Repository
public class SignUPDAOImpl implements SignUPDAO {

	private static final Logger logger = LoggerFactory.getLogger(SignUPDAOImpl.class);

	
	@Autowired
	HibernateUtil hibernateUtil;
	
	@Override
	public Integer saveRegistrationForm(SignUp signUp) {
			return (Integer) hibernateUtil.create(signUp);
	}
	
	@Override
	public Object geExistingtOTP(BigInteger generatedOTP) {
			Object uniqueResult = hibernateUtil.createEntityCriteria(OTPDetails.class).add(Restrictions.eq("otpCode", generatedOTP)).uniqueResult();
			return uniqueResult;
		
	}

	@Override
	public SignUp getSignUpDetails(String uname) {
		return (SignUp) hibernateUtil.createEntityCriteria(SignUp.class).add(Restrictions.eq("signUpEmail", uname)).uniqueResult();
	}

}
